-- 1. USERS 테이블 생성
CREATE TABLE USERS (
    USER_ID VARCHAR2(50) PRIMARY KEY,      -- 사용자 ID
    PASSWORD VARCHAR2(100) NOT NULL,       -- 비밀번호
    NAME VARCHAR2(50) NOT NULL,            -- 사용자 이름
    EMAIL VARCHAR2(100) UNIQUE,            -- 이메일
    PHONE VARCHAR2(20),                    -- 전화번호
    JOINED_DATE DATE DEFAULT SYSDATE       -- 가입일
);

-- 2. ACCOUNTS 테이블 생성 (USER_ID 외래 키 설정)
CREATE TABLE ACCOUNTS (
    ACCOUNT_ID VARCHAR2(20) PRIMARY KEY,   -- 계좌 ID
    USER_ID VARCHAR2(50),                  -- 사용자 ID (FOREIGN KEY)
    BALANCE NUMBER(15, 2) DEFAULT 0,       -- 잔액
    ACCOUNT_TYPE VARCHAR2(20),             -- 계좌 유형
    CREATED_DATE DATE DEFAULT SYSDATE,     -- 계좌 생성일
    FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID) ON DELETE CASCADE
);

-- 3. TRANSACTIONS 테이블 생성 (ACCOUNT_ID 외래 키 설정)
CREATE TABLE TRANSACTIONS (
    TRANSACTION_ID NUMBER PRIMARY KEY,     -- 거래 ID
    ACCOUNT_ID VARCHAR2(20),               -- 계좌 ID (FOREIGN KEY)
    TRANSACTION_TYPE VARCHAR2(10),         -- 거래 유형 (예: 입금, 출금)
    AMOUNT NUMBER(15, 2) NOT NULL,         -- 거래 금액
    TRANSACTION_DATE DATE DEFAULT SYSDATE, -- 거래 일자
    DESCRIPTION VARCHAR2(200),             -- 거래 설명
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID) ON DELETE CASCADE
);

-- 4. TRANSACTION_SEQ 시퀀스 생성
CREATE SEQUENCE TRANSACTION_SEQ
START WITH 1
INCREMENT BY 1
NOCACHE;

-- 5. 샘플 데이터 삽입
-- USERS 테이블에 샘플 사용자 삽입
INSERT INTO USERS (USER_ID, PASSWORD, NAME, EMAIL, PHONE)
VALUES ('U123', 'password123', 'John Doe', 'john@example.com', '010-1234-5678');

-- ACCOUNTS 테이블에 샘플 계좌 삽입 (USER_ID가 USERS에 존재해야 함)
INSERT INTO ACCOUNTS (ACCOUNT_ID, USER_ID, BALANCE, ACCOUNT_TYPE)
VALUES ('A123', 'U123', 50000, 'Savings');

-- TRANSACTIONS 테이블에 샘플 거래 삽입
INSERT INTO TRANSACTIONS (TRANSACTION_ID, ACCOUNT_ID, TRANSACTION_TYPE, AMOUNT, DESCRIPTION)
VALUES (TRANSACTION_SEQ.NEXTVAL, 'A123', '입금', 1000, '초기 입금');

-- 6. 데이터 조회 (확인용)
SELECT * FROM ACCOUNTS;
SELECT * FROM USERS;
SELECT * FROM TRANSACTIONS;
